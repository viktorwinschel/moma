Fig. 1.1: A graph. The vertices of the graph are represented by points, in this case A, B, B0, C, D and D0. The edges are represented by arrows such as f. Not all the arrows in the figure are labelled. (image)
Fig. 1.2: A path. A path of a graph G from vertex A to vertex B is a finite sequence of successive arrows of the graph, the first one beginning at A and the last ending at B. (image)
Fig. 1.3: A category. A category is a graph in which any two successive arrows have a composite; for example, the arrows f from A to B and g from B to C have a composite arrow fg from A to C (if such an arrow exists). (image)
Fig. 1.4: Difference between a graph and a category. The first figure represents a graph which does not underlie a category, since the path (f, g) has no composite and there are no identities. This graph is included in a smallest category (represented in the central figure) obtained by adding a link h0 from A to C which becomes the composite fg of f and g, and identities for A, B and C. The third figure shows… (image)
Fig. 1.5: Commutative diagrams. Example of two simple commutative diagrams in a category. A commutative triangle has two successive arrows f and g and their composite h. A commutative square has two pairs of successive arrows f, g and f0, g0 such that fg = f0g0. (image)
Fig. 1.6: Functors. (Caption text aus dem Dokument nicht vollständig sichtbar) (image)
Fig. 1.7: A free object. We have a functor p from K to K0 and an object A0 of K0. The object A0 generates a free object, denoted by A, with respect to p if there is an arrow g0 from A0 to pA satisfying a universal property: for any arrow f0 from A0 to an object B in K0, there exists a unique arrow f from A to B in K such that f0 = p(f) (Fig. 1.7 illustrates this construction). (image)
Fig. 1.8: The perception field. The (perception) field of the object A in the category K has for objects the arrows of K arriving to A (in the figure h, h0 and h00). An arrow k: h -> h0 from h to h0 is defined by a link k: C -> C0 in K such that (h, h0, k) form a commutative triangle. (The operating field as a category is drawn on the right in the figure.) (image)
Fig. 1.9: Operating field. For the category K depicted on the left, the operating field (depicted on the right) of A in K has for objects the links (in the figure f, f0, f00) from A to other objects in K, and its links, such as g: f -> f0, correspond to the commutative triangles with vertex A. (The operating field as a category opposite to K is similarly defined.) (image)
Fig. 1.10: The graph G of routes. The vertices of G are the seven cities A, A1, A2, …, A5, B, and its arrows represent the possible routes between them. G is a labelled graph, the weight of an arrow representing the length of that route (given in the figure for f1, f2, f3, f4). (image)
Fig. 1.11: The category of paths. For the graph G of routes, the category P(G) of its paths has as arrows all the paths of G (the identity paths are not drawn). A path reduced to one arrow is identified with that arrow. (Fig. 1.11 in the document shows this category of paths diagrammatically.) (image)
Fig. 1.12: The category of travel times. The category K of travel times shows the possible travel times between the cities. It is obtained from the category P(G) of Fig. 1.11 by identifying two paths between the same cities if they have equal total length, so that each equivalence class of paths (with the same length) becomes a single arrow in K. (image)
Fig. 1.13: Categories associated to integers. The category associated to the integer n has the n+1 integers 0, 1, 2, …, n (≤ n) as its objects, and arrows corresponding to the natural order between these integers. (Thus there is an arrow from i to j iff i ≤ j.) (image)
Fig. 2.1: A pattern. A pattern P in the category K is a homomorphism of graphs P from a graph sP (the “sketch” of the pattern) to K. The components of the pattern are the images of the vertices (indices) of sP under P. (Fig. 2.1 in the document depicts an example pattern.) (image)
Fig. 2.2: A collective link. A collective link from the pattern P to an object A in K consists of a link from every component of the pattern to A, these links being correlated by the distinguished links of the pattern. (image)
Fig. 2.3: Role of the indices. The pattern P has four components, with indices 1, 2, 3, 4. The indices 1 and 3 have the same image B by P, while 2 and 4 have the same image B0. (This illustrates how different indices can correspond to the same image under P.) (image)
Fig. 2.4: Colimit of a pattern. The given pattern P (its sketch is not shown) admits cP as its colimit, and (ci) is the collective binding link from P to cP. The universal property of the colimit ensures that any other collective link from P to an object X factors uniquely through cP. (image)
Fig. 2.5: Comparison of the sum and the colimit. The pattern P admits both a sum (Sum) and a colimit (cP). We denote by (si) the collective binding link from the family (Pi) to its sum, and by (ci) the collective binding link from P to cP. The difference between Sum and cP (colimit) is illustrated by a comparison link c (dotted line) in the figure, which “measures” the constraints among the components. (image)
Fig. 2.6: Oxygenation of the haemoglobin tetramer. The curves represent the oxygenation fraction m as a function of the oxygen concentration [O2]. The dotted line is for the haemoglobin molecule, while the solid line is for the case where its four constituent monomers are separated. The difference between the two curves shows the difference between a simple sum of the four units, and the colimit representing the haemoglobin molecule as a whole. (image)
Fig. 3.1: P-factors of a link to cP. A link g from B to the colimit cP of the pattern P is mediated by the pattern P if it factors through a link gi from B to one of the components Pi of P. Such a link gi is called a P-factor of g (with respect to P). (image)
Fig. 3.2: Links correlated by a zigzag. The zigzag of arrows from i to j in the sketch sP of the pattern P has for its image by P a zigzag of distinguished links of P. The links gi and gj from an object B to components Pi and Pj are correlated by such a zigzag of P. (The diagram in Fig. 3.2 is commutative, meaning two different paths in the diagram with the same start and end have the same composite in K.) (image)
Fig. 3.3: A perspective. Given an object B and a pattern P, a link gi from B to a component Pi of P is called an aspect of B for P. A perspective of B for P is a maximal set of aspects of B (links to various Pi) that are pairwise correlated by zigzags of distinguished links in P. (Fig. 3.3 illustrates such a perspective.) (image)
Fig. 3.4: A cluster between patterns. Given patterns Q and P, a cluster from Q to P is a maximal set of links from components of Q to components of P such that: (i) Each component Q_k of Q is connected to at least one component P_i of P by a link g_i. (If there are several such links from Q_k, they are correlated by a zigzag of distinguished links of P.) (ii) If a link g_j from Q to P is correlated by a zigzag to a link already in the cluster, then g_j is also in the cluster. (This defines a cluster as shown in Fig. 3.4.) (image)
Fig. 3.5: Composition of clusters. The cluster G from pattern Q to P is composed with the cluster G0 from P to Q0. The composite cluster GG0 is generated by the composites of the links of G with those of G0. The figure shows why two such composites are well correlated by a zigzag of distinguished links of Q0. (image)
Fig. 3.6: (Q, P)-simple link. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.7: Composition of simple links. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.8: Comparison between a pattern and its perspective. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.9: A representative sub-pattern. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.10: Connected patterns. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.11: Complex link. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.12: A hierarchical category. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.13: A ramification of length 2. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.14: Different ramifications. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 3.15: A reducible 2-iterated colimit. (Caption im Dokument unvollständig sichtbar) (image)
Fig. 4.1: Image of a pattern and of a collective link. p is a functor from K to K0. A pattern P in K has for its image by p a pattern pP in K0: it has the same sketch as P; the component of index i is the image pPi of the component Pi of P. A collective link (ci) from P to its colimit C in K has for image by p a collective link from pP to the image pC of C (as illustrated in Fig. 4.1). (image)
Fig. 4.2: Deformation of a colimit by a functor. The pattern P admits C as its colimit in K. The binding collective link (ci) from P to C has, for its image by the functor p, a collective link from the pattern pP to the image pC of C in K0. The comparison link c binds the collective link (ci) (image by p of the binding link from P to C) to the image pC of C, measuring how far p fails to preserve the colimit of P. (image)
Fig. 4.3: Preservation of a colimit. We have a functor p from K to K0, and a pattern P which has a colimit C in K. We say that this colimit is preserved by the functor if the pattern pP (image of P by p) admits the image pC of C for its colimit in K0. (image)
Fig. 4.4: Distributed link and limit of a pattern. A distributed link from an object B to the pattern P consists of links f_i from B to the components P_i of P, correlated by the distinguished links of the pattern. P has a limit lP (also called a classifier of P) if there exists an object lP and a particular distributed link (l_i) from lP to P, called the projection distributed link, through which any distributed link (f_i) from B to P is classified in a unique way into a link f from B to lP satisfying f_i = f l_i for each i. (image)
Fig. 4.5: A pro-cluster. A pro-cluster from P to Q in a category K is a maximal set of links from components of P to components of Q such that: A component Q_k of Q is the target of at least one link from some component P_i of P (if there are multiple, they are correlated by a zigzag of distinguished links); and if a link from P to Q is correlated by distinguished links to another in the set, it is also included. (This generalizes the notion of cluster by not requiring connectivity conditions.) (image)
Fig. 4.6: Complexification with respect to an option. An option Op is given in K, and K0 is the category obtained by the complexification process in which the changes called for by the objectives of the option are implemented. (Depending on the nature of the option, it is called a mixed complexification or a classifying complexification.) (image)
Fig. 4.7: Absorption and elimination. K0 is the complexification of K with respect to an option whose sole objectives are the absorption of the external graph U and the elimination of the objects included in a specified set V of objects of K. The complexification is what remains after these operations – namely, the full sub-category K0 of the sum having as objects the vertices of U and the objects of K not in V. In particular, if a complex object A belongs to V, a pattern which is a decomposition of A loses its colimit as well as the binding links of its components to A (Fig. 4.7 illustrates this). (image)
Fig. 4.8: Binding of patterns. (Caption im Dokument nicht vollständig sichtbar) (image)
Fig. 4.9: Forcing of colimits. (Caption im Dokument nicht vollständig sichtbar) (image)
Fig. 4.10: Construction of the simple links. (Caption im Dokument nicht vollständig sichtbar) (image)
Fig. 4.11: Two successive complexifications. (Caption im Dokument nicht vollständig sichtbar) (image)
Fig. 4.12: Emergent complex link. (Caption im Dokument nicht vollständig sichtbar) (image)
Fig. 5.1: Transition between two configurations. The evolutive system K admits T as its time scale and K_t for its configuration category at time t. The transition (partial) functor from K_t to the configuration category K_t’ (at a later time t’) identifies what each component at time t becomes at time t’ (like pointing out the corresponding elements in two successive snapshots of a system). (image)
Fig. 5.2: An evolutive system. The figure shows several successive configurations of an evolutive system K, beginning from an initial configuration at time t0. The transitions between the successive configurations are indicated (each transition is a partial functor between configuration categories K_t). (image)
Fig. 5.3: Components of an evolutive system. A component consists of a maximal family of objects of successive configurations corresponding to each other through transitions over time. The component A has the configurations A_t in each K_t, linked by the transitions (so A_t transforms into A_t’ under the transition functors for all successive time points t < t’). (image)
Fig. 5.4: Different interconnections between components. Two components of an evolutive system may interact over time. Several cases are shown in the figure. They may share some configurations (mix), or one’s configuration may transform into another’s (merge), etc., illustrating possible interconnections during the evolution. (image)
Fig. 5.5: Stability span. At time t the component A of level n+1 is the colimit of the pattern P_t on the lower levels ≤ n, and also the colimit of another such pattern Q_t. The pattern P_t then varies with time, staying valid up to time t + ε(t). The stability span r(t) is the length of the time interval during which a component’s internal organization (pattern) remains valid (before it must be updated by a new pattern). (image)
Fig. 5.6: Complex identity. Component A of level n+1 has an internal organization at lower levels, which is progressively modified: A admits a sequence (P_m) of decompositions, each one valid on a time interval [t_m, t_{m+1}). At each step, the component’s identity changes as its internal structure changes, but we consider it the “same” component A through these successive modifications (this idea is formalized in the notion of complex identity, see text). (image)
Fig. 5.7: Variations of the different spans. The figure shows diagrams for different temporal spans (renewal span, stability span, etc.) over the life cycle of a component. This can be compared with the cycle of the commercial life of a product (Pourcel, 1986). (image)
Fig. 5.8: Fibration associated to an evolutive system. (Caption im Dokument nicht vollständig sichtbar) (image)
Fig. 6.1: A schematic view of a memory evolutive system. A memory evolutive system (MES) is a hierarchical evolutive system, and the figure represents one of its configuration categories. Different sub-systems are distinguished. The receptors model components of the system which receive information from the environment or from internal states. The memory stores records of objects, behaviors, and experiences of any kind; these records can later be recalled in similar situations (the figure shows one ramification of record M). The co-regulators (CRs, depicted in front of the memory, in a different color to indicate they are not part of it) participate in the regulation of the dynamics, and in the storage of records (such as M0) and their recall (depicted for M). Each co-regulator operates at its own complexity level and pace, based on its landscape (which collects partial information the co-regulator receives from the system). The landscapes are depicted to the right of each co-regulator; in the bottom-most one, some elements are represented. Each co-regulator operates via its admissible procedures whose commands are carried out by effectors. A higher-level co-regulator can control a lower one, for instance via a decomposition of one of its agents A. (Some arrows and cones correspond to various constructions explained later.) (image)
Fig. 6.2: Landscape of a co-regulator. The landscape of a co-regulator at a given time t is a formal model of the information about the system that the co-regulator can collect and decode during the first phase of its current step (lasting up to t+p). (image)
Fig. 6.3: Selection of a procedure. During the second phase of a step (up to time t+m), the co-regulator selects the objectives to be carried out by choosing an admissible procedure (from its memory) through its landscape. (Fig. 6.3 illustrates this selection process in a schematic way.) (image)
Fig. 6.4: Anticipated landscape. The commands of the admissible procedure Pr selected by the co-regulator on its landscape at time t are sent to effectors. The standard changes expected from the commands (the anticipated effects) are represented on an anticipated landscape (Fig. 6.4). (image)
Fig. 6.5: Evaluation. At the beginning of the next step, the anticipated landscape is compared with the actual landscape at time t+Δ. The partial functor “comparison” from the anticipated landscape to the new actual landscape indicates the discrepancies (errors) between expected and actual outcomes (Fig. 6.5 illustrates this evaluation). (image)
Fig. 6.6: Complete step of a co-regulator. The successive phases of the step of the co-regulator from t to t+Δ are shown (Fig. 6.6): first the formation of the landscape, then selection of procedure, then execution/anticipation, then evaluation. (Figs. 6.1–6.5 correspond to parts of this cycle.) (image)
Fig. 6.7: Structural temporal constraints. The order of magnitude of the period d(t) must be greater than that of its time lag p(t) and of any propagation delays in its internal organization and selected procedure. If these temporal constraints fail to be satisfied, there is a fracture that might be repaired in the next step; if they fail for several steps, it leads to a dyschrony (see Chapter 7). (image)
Fig. 6.8: A business enterprise. On the left, a memory evolutive system modeling a business enterprise is depicted, with the hierarchy of its co-regulators of different levels. On the right, the dynamics in their various landscapes are depicted, and the production phases are highlighted in the lower-level components (workshops) while planning phases are emphasized at higher managerial levels. (This figure illustrates how an MES can represent a company’s organization.) (image)
Fig. 7.1: Different causes of fractures. Time is on the horizontal axis (left to right). (1) Regular step for the co-regulator, showing durations of the different phases (landscape formation, procedure selection, etc.). (2) A de-synchronization: the period d increases (phase lengthens), causing a temporary misalignment that is later corrected. (3) A fracture: the time lag p increases too much, causing a break in synchronization. (4) A dyschrony: repeated fractures over several steps lead to chronic misalignment (needing higher-level intervention). (image)
Fig. 7.2: Different types of dyschrony. Comparison, for a given co-regulator, of the evolution over time of the time lag p, the period d, and the minimum stability span ζ of the components involved in its procedure. Various cases of dyschrony are illustrated depending on how p, d, ζ change relative to each other over time. (image)
Fig. 7.3: Interactions between two heterogeneous co-regulators. We have two co-regulators with different complexity levels; the higher-level one (macro-CR) has much longer steps than the lower-level one (micro-CR). During one macro-step from T1 to T2, there are many micro-steps from t1 to t2. The figure shows how a macro-CR and micro-CR can interact and how fractures can occur between them if their activities misalign (Fig. 7.3). (image)
Fig. 7.4: Fractures and their repairs. Flowchart of the many possible outcomes from fractures in co-regulators interacting between and across levels. The pattern repeats at higher and lower levels. The possible consequences within a single co-regulator (self-repairs, compensation, etc.) and across co-regulators (assistance from higher-level, etc.) are shown. (Fig. 7.4 summarizes these scenarios.) (image)
Fig. 7.5: Aging curves. The curve of ζ/d as a function of time slowly approaches 1 during senescence, while the curve of ζ/p also approaches 1 but remains above the first curve. (Thus the system’s period d and stability ζ decline with age, and eventually the time lag p catches up to them.) (image)
Fig. 7.6: Pathology and recovery during aging. During a pathology, ζ/p may cross under ζ/d for a while (meaning the time lag exceeds stability span, causing dyschrony). For recovery, ζ/p must climb back above ζ/d, though both eventually decrease with age. Death will ensue if ζ/p remains below ζ/d for too long (no recovery). (image)
Fig. 8.1: Formation of a record. An item S activates a pattern R of (internal or external) receptors. Only some of its components are observable in the landscape L_E of a particular co-regulator E, by the pattern r_E of their perspectives. (This pattern is depicted twice: in the landscape L_E; but also in the system, by the aspects defining the different perspectives.) One of the next objectives of E will be to bind this pattern, in order to remember it. This objective is relayed to the system, where it becomes the objective of binding the pattern R_E (the image of r_E by the difference functor from the landscape to the system). Thus, the operative procedure on the system should form the colimit M_E of R_E, called the partial record of S for E. If M_E has a perspective m_E in the landscape of E (as is the case in the figure), it is called an internal E-record; in this case m_E is a colimit of r_E in the landscape. (image)
Fig. 8.2: Procedural memory. The procedural memory Proc is an evolutive sub-system of the memory MEM of the MES, whose components are called procedures. Each procedure Pr has an associated pattern of commands OPr: its indices are links f from Pr to an effector OPr_f (a command of the procedure); each such link represents a command. (Fig. 8.2 illustrates this structure of procedural memory.) (image)
Fig. 8.3: Effector record of a limit of procedures. The procedure Pr is the limit of a pattern P of procedures, with projections d_i: Pr -> P_i. The commands of Pr unite those of the various P_i, meaning Pr’s commands include all commands from each P_i. The colimit of the pattern of commands (OPr) of Pr is an effector record effPr – essentially the combined effectors for all commands in Pr. (Fig. 8.3 shows how effPr is formed by uniting the effectors of the P_i through a cluster of links.) (image)
Fig. 8.4: Activator link. M is the record of a situation S, and Pr a procedure which has been successfully used for responding to it; OPr is the pattern of commands of Pr. An activator link h from M to Pr is created when the procedure Pr is effective for situation S. More precisely, if each command f of Pr has a corresponding binding link c_f from its effector OPr_f to the colimit of perspectives of S (record M), then these links generate a cluster from the pattern of S’s partial records Q to the pattern of effector records of the P_i (image of P by functor eff); this cluster yields a simple link h' from M to effPr (the colimit of eff P), and an associated activator link h from M to Pr (Fig. 8.4 illustrates this). (image)
Fig. 8.5: Formation of a new procedure. A new situation is encountered, which activates a pattern Q of partial records Q_i each having an activator link h_i to a procedure Pr_i; let h0_i be the corresponding link from Q_i to effPr_i (constructed as in Fig. 8.4). We suppose that the Pr_i are the components of a pattern P of procedures and that the links h0_i generate a cluster from the pattern Q to the pattern effP (image of P by the functor eff). Then the situation will be remembered by the colimit M of Q, the selected new procedure Pr will be the limit of P, and an activator link h will be formed from M to Pr, with the corresponding h0 binding the cluster. (image)
Fig. 8.6: Storing of a procedure in the memory. The situation S activates its record M, which is the colimit of the pattern Q of its partial records. E is a co-regulator for which M has a partial record (on the figure, an internal E-record M_E); E selects the procedure Pr_E in its landscape, through an activator link h_E from M_E to Pr_E. The operative procedure Pr_o is the limit of those procedures Pr_E which have succeeded for the various co-regulators. An activator link h is then constructed from the record M of S to Pr_o, or strengthened if it already exists. (image)
Fig. 8.7: Formation of an E-concept. E is a co-regulator and M a record in the memory MEM. A subset of agents of E recognizes certain aspects β, β0 of M. These agents (indexed by the various aspects β) together activate a pattern of perspectives r_E of M for E. The trace Tr_M of M for E is the pattern with indices given by those aspects β of M, and components being the corresponding agents. This trace pattern is then bound (via the difference functor) into a new record C_E^M, which is the E-concept of M (i.e., an internal representation of the class of similar records as seen by E). (image)
Fig. 8.8: E-universal link from a record to its E-concept. M is a record having an E-concept C_M; the aspects of M recognized by E form a distributed link to its E-trace Tr_M, which is classified by a link m_0 from M to the limit C_M of Tr_M. This link m_0 is an E-universal link from M to C_M, meaning that for any other candidate link from M to any E-concept, there is a unique factorization through m_0 (C_M is the best “summary” of M for co-regulator E). (image)
Fig. 8.9: The functor E-concept. M and N are records which have E-concepts, denoted by C_M and C_N, and f is a link in the memory MEM from M to N. Thus, C_M is the limit of the E-trace Tr_M of M and C_N is the limit of Tr_N. A functor C (E-concept functor) sends M to C_M and N to C_N and f to a link between C_M and C_N if such exists, effectively mapping records to their E-concepts. (Fig. 8.9 illustrates this functor.) (image)
Fig. 8.10: Colimit of E-concepts. M is a record which is the colimit of a pattern Q of records M_i. Then its E-concept C_M is the colimit of the pattern C_Q (the image of Q by the E-concept functor C). This means that if M is composed of smaller records M_i, the E-concept of M results from combining the E-concepts of the M_i (Fig. 8.10 depicts this composition of concepts). (image)
Fig. 9.1: Neurons and synapses. A neuron N is a cell of the neuronal system. It has two prolongations: an axon and a dendritic tree. Two neurons N and N0 are linked by synapses such as f, which connect the axon of one to the dendrite of the other. (Fig. 9.1 provides a simplified schematic of neurons and synaptic connections.) (image)
Fig. 9.2: A synaptic path. A synaptic path is a sequence of consecutive synapses, joining N to N1, N1 to N2, …, and N_{m-1} to N_m. If the activity of the first neuron N is strong enough and there is no inhibition, a spike (signal) can propagate from N to N_m along this path, with each synapse transmitting to the next neuron. The strength of the synaptic path is defined as the product of the strengths of its successive synapses, and its propagation delay as the sum of their delays. (image)
Fig. 9.3: Graph of neurons. The upper half of the figure depicts a system of neurons and synapses, and the lower half depicts the corresponding graph. Its vertices model neurons N, N0, N00, M, etc., and its arrows model synapses directed from the pre-synaptic neuron to the post-synaptic neuron. (This establishes the graph of neurons at a given time t, as part of modeling the neuronal system.) (image)
Fig. 9.4: A cat-neuron. A cat-neuron (category neuron) is a formal unit representing a synchronous assembly of neurons. It is formed by a family of neurons which are synchronously activated through certain synaptic paths; it is modeled by a pattern in the category of neurons. The colimit of this pattern yields a new object which is the cat-neuron (level-1 cat-neuron). (Fig. 9.4 illustrates a cat-neuron as the bound entity of a synchronous assembly.) (image)
Fig. 9.5: Cluster and simple link between cat-neurons. The cat-neurons have been obtained as colimits of synchronous assemblies of neurons, added in a complexification of the category of neurons (and later acquiring their own identity). The links between them are determined by the construction of the complexification. In particular, some of the links are simple links: if Q and P are synchronous assemblies of neurons bound respectively by the cat-neurons cQ and cP, a (Q, P)-simple link g from cQ to cP binds a cluster G of synaptic paths from pattern Q to pattern P. We recall that the “simplicity” of a link depends on the chosen decompositions (here, Q and P) of the objects (the cat-neurons cQ and cP) it connects. (image)
Fig. 9.6: A cat-neuron of level 2. A cat-neuron of level 2 is a formal unit A obtained by binding together a synchronous assembly P of cat-neurons of level 1. Thus it requires three levels: level 0 (individual neurons), level 1 (cat-neurons as assemblies of neurons), and level 2 (the new cat-neuron as a bound assembly of level-1 cat-neurons). (image)
Fig. 9.7: Partial record. An item S activates a pattern of receptors R. A particular co-regulator E receives some aspects of R, the perspectives of which form a pattern r_E in its landscape L_E. This leads to the formation of a cat-neuron M_E (colimit of R_E), which is the partial record of S for E (as defined in Chapter 8); it is an E-internal record of S if it has a perspective which is the colimit of r_E in the landscape of E (meaning E can internally recognize S). (image)
Fig. 9.8: Internal E-record. Same situation as in Fig. 9.7, except that the partial record M_E of S has a perspective m_E for E, which is the colimit of r_E in the landscape of E. Then M_E is called an internal E-record of S, because E itself (in its landscape) contains a record of S. (Fig. 9.8 shows how having an internal record differs from just a partial record.) (image)
Fig. 9.9: Activation of a procedure. If S is a new stimulus that E does not recognize (no internal record), E can nonetheless react (e.g., for a food item, to eat it) through the activation of an existing activator link h_E (Fig. 9.9). In this case, the complete step of the co-regulator (from recognition of S to executing a procedure) corresponds to the activation of what we might call a “reflex” via h_E connecting S’s record to a known procedure. (image)
Fig. 9.10: Record of S. Different co-regulators have partial records of the item S; in particular, M_E for E and an internal E0-record M_E0 for another co-regulator E0. These various partial records form the components of a pattern Q (of partial records of S). If M is the colimit of Q (the whole record of S in memory), then M emerges from the interplay among the procedures of the different co-regulators that bind the various partial records (see text for details). (image)
Fig. 9.11: Activator link. A procedure Pr has a pattern OPr of commands to effectors. OPr is stored in the procedural memory. If S occurs and has a record M, and Pr is successfully used for S, then an activator link h is formed from M to Pr (Fig. 9.11). Each time Pr is selected in the presence of M and succeeds, the simultaneous activation of M and Pr increases the strength of h (by Hebb’s rule), up to a threshold. Conversely, if Pr fails, the strength of h decreases, or h may even be removed if failures repeat. This mechanism stores which procedures are effective for which situations (conditioning). (image)
Fig. 9.12: Formation of a procedure. An item S has different partial records M_E, which are bound by its record M. Each M_E has an activator link h_E to a procedure Pr_E; if Pr is the limit of the procedures Pr_E selected by some co-regulators, then an activator link k from M to Pr is formed to combine the different h_E (as explained in Chapter 8, Section 6.2). (image)
Fig. 9.13: Conditioning. Initially, an unconditioned stimulus US (e.g. food) presented in the context of a specific internal state I (e.g. hunger) activates an unconditioned reflex UR (e.g. salivation). If a conditioned stimulus CS (e.g. bell sound) is repeatedly paired with the US, eventually the CS alone makes the subject produce the response (the conditioned reflex). In our model, this is explained as follows: S (food + context) has a record M and an associated procedure (eat); another stimulus S' (bell+context) initially has no record. By pairing, S' acquires a partial record connected to M and the procedure via an activator link. After conditioning, the activator link from S'’s record to the procedure is strong enough that S' (CS) triggers the response without S (US). (image)
Fig. 10.1: E-trace of a record. An item S has a record M, and E is a co-regulator for which the record M has several aspects (such as β, β0). The trace Tr_M of M for E is the pattern having for components those aspects of M that are implemented in E (indexed by the different aspects β), and for each such aspect an agent in E. In other words, Tr_M is the pattern of how M is “seen” by E. (Fig. 10.1 depicts this E-trace of a record.) (image)
Fig. 10.2: Different traces of a record. M and M0 are respectively the records of a red circle and of a red square, and they have different traces for a color-sensitive co-regulator E (one trace corresponds to “red circle” aspects, the other to “red square” aspects). However, these traces share a common part (“red”), and a higher-level co-regulator E0 observing E’s activity may identify this commonality. (Fig. 10.2 illustrates how traces can differ and overlap.) (image)
Fig. 10.3: E-concept. The record M has an E-concept (C^E_M) if its E-trace Tr_M has a limit C_M. There is then an E-universal link m0 from M to C_M, through which any link from M to an E-concept factors (making C_M the best E-approximation of M, as per Theorem 3 of Chapter 8). (image)
Fig. 10.4: Instances of an E-concept. E is a color-CR (color-sensitive co-regulator). The records M of a blue circle and M0 of a blue triangle have pro-homologous E-traces; this is observed by E0, a higher-level co-regulator, which receives aspects from the traces of M for the color attribute and from the traces of M0 for the color attribute. Recognizing the similarity (both are blue), E0 can form a higher concept. (Fig. 10.4 shows instances of a color concept “Blue” and shape concept “Circle”.) (image)
Fig. 10.5: Concept for several attributes. The record M of a blue circle has the color-concept Blue and the shape-concept Circle. E0 is a higher co-regulator which receives aspects from the traces of M for the color attribute (blue) and from the traces of M for the shape attribute (circle). It can combine these to form a concept that integrates both attributes (e.g. “BlueCircle”). More general concepts are obtained by successively combining concepts of various attributes through limits. (Fig. 10.5 illustrates a concept combining color and shape attributes.) (image)
Fig. 10.6: Archetypal core and its fans. The archetypal core (modeled by AC) is the part of the memory containing the fundamental records (archetypes) and their strongest interconnections. To each record A in the archetypal core is associated a set of complex links in AC, called the fan associated to A, with certain properties (each fan link connects A to another archetype in a way that influences activation patterns). (Fig. 10.6 shows an archetypal core and some fan links.) (image)
Fig. 10.7: AC and Exp. Darstellung eines Teils des Gedächtnisses MEM mit dem archetypischen Kern AC und der Erfahrungsspeicher Exp, der AC enthält (Fig. 10.7). (Caption im Dokument nicht vollständig sichtbar) (image)
Fig. 10.8: Extension of the archetypal core. Same situation as in Fig. 10.7 (only the central part is shown), except that here the record N in Exp has been integrated into AC, following a sufficient strengthening of its connections (fan links) to existing archetypes. This shows how the archetypal core can extend by absorbing new records that become fundamental through learning (Fig. 10.8). (image)
Fig. A.1: A multi-colimit. The pattern P admits a multi-colimit (C_k) if for each C_k there is a binding collective link (c_{k_i}) from P to C_k; and each collective link (f_i) from P to an object A is associated with a unique multi-colimit component C_k such that f_i factors through C_k’s binding link. (Fig. A.1 illustrates a pattern with multiple colimits.) (image)



