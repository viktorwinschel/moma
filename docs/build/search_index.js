var documenterSearchIndex = {"docs":
[{"location":"api.html#API-Reference","page":"API","title":"API Reference","text":"","category":"section"},{"location":"api.html#Overview","page":"API","title":"Overview","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"The Categories module provides implementations of fundamental category theory concepts used in Memory Evolutive Systems (MES). This includes:","category":"page"},{"location":"api.html","page":"API","title":"API","text":"Basic categorical constructions (objects, morphisms, categories)\nFunctorial mappings between categories\nNatural transformations between functors\nPattern (diagram) creation and manipulation\nColimit computation and verification","category":"page"},{"location":"api.html#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Modules = [Moma.Categories]\nOrder = [:module]","category":"page"},{"location":"api.html#Moma.Categories","page":"API","title":"Moma.Categories","text":"module Categories\n\nThis module provides basic categorical constructions used in Memory Evolutive Systems (MES). It includes implementations of objects, morphisms, categories, functors, natural transformations, and patterns, along with functions for working with these constructions.\n\nMathematical Background\n\nThe module implements core concepts from category theory:\n\nObjects and morphisms form categories with composition and identity laws\nFunctors preserve structure between categories\nNatural transformations connect functors\nColimits represent universal constructions\n\nExports\n\nObject: Represents an object in a category\nMorphism: Represents a morphism between objects\nCategory: Represents a category with objects and morphisms\nFunctor: Represents a functor between categories\nNaturalTransformation: Represents a natural transformation between functors\nPattern: Represents a pattern (diagram) in a category\nidentity: Creates an identity morphism for an object\ncompose: Composes two morphisms\ncreate_pattern: Creates a pattern from objects and morphisms\ncheck_binding: Checks if an object forms a colimit for a pattern\nfind_colimit: Finds or constructs colimits for patterns\nis_morphism_in_category: Checks if a morphism belongs to a category\n\n\n\n\n\n","category":"module"},{"location":"api.html#Types","page":"API","title":"Types","text":"","category":"section"},{"location":"api.html#Basic-Types","page":"API","title":"Basic Types","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Moma.Categories.Object\nMoma.Categories.Morphism\nMoma.Categories.Category","category":"page"},{"location":"api.html#Moma.Categories.Object","page":"API","title":"Moma.Categories.Object","text":"Object{T}\n\nRepresents an object in a category.\n\nType Parameters\n\nT: The type of data associated with the object\n\nFields\n\nid::Symbol: Unique identifier for the object\ndata::T: Data associated with the object\n\nExamples\n\n# Create an object with string data\nobj = Object(:A, \"data\")\n\n# Create an object with numeric data\nnum_obj = Object(:B, 42)\n\n# Create an object with custom type\nstruct Point\n    x::Float64\n    y::Float64\nend\npoint_obj = Object(:P, Point(0.0, 1.0))\n\n\n\n\n\n","category":"type"},{"location":"api.html#Moma.Categories.Morphism","page":"API","title":"Moma.Categories.Morphism","text":"Morphism{S,T}\n\nRepresents a morphism between objects in a category.\n\nType Parameters\n\nS: The type of data in the source object\nT: The type of data in the target object\n\nFields\n\nsource::Object{S}: Source object\ntarget::Object{T}: Target object\nmap::Function: Function mapping source to target\nid::Symbol: Unique identifier for the morphism\n\nExamples\n\n# Create objects\nA = Object(:A, \"hello\")\nB = Object(:B, \"HELLO\")\n\n# Create a morphism that uppercases strings\nf = Morphism(A, B, uppercase, :f)\n@assert f.map(A.data) == B.data\n\n# Create a morphism between numeric objects\nX = Object(:X, 1)\nY = Object(:Y, 2)\ng = Morphism(X, Y, x -> x + 1, :g)\n\n\n\n\n\n","category":"type"},{"location":"api.html#Moma.Categories.Category","page":"API","title":"Moma.Categories.Category","text":"Category\n\nRepresents a category with objects and morphisms.\n\nFields\n\nobjects::Vector{<:Object}: Objects in the category\nmorphisms::Vector{<:Morphism}: Morphisms in the category\nid::Symbol: Unique identifier for the category\n\n\n\n\n\n","category":"type"},{"location":"api.html#Advanced-Types","page":"API","title":"Advanced Types","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Moma.Categories.Functor\nMoma.Categories.NaturalTransformation\nMoma.Categories.Pattern","category":"page"},{"location":"api.html#Moma.Categories.Functor","page":"API","title":"Moma.Categories.Functor","text":"Functor\n\nRepresents a functor between categories.\n\nFields\n\nsource::Category: Source category\ntarget::Category: Target category\nobject_map::Dict{<:Object,<:Object}: Mapping of objects\nmorphism_map::Dict{<:Morphism,<:Morphism}: Mapping of morphisms\nid::Symbol: Unique identifier for the functor\n\n\n\n\n\n","category":"type"},{"location":"api.html#Moma.Categories.NaturalTransformation","page":"API","title":"Moma.Categories.NaturalTransformation","text":"NaturalTransformation\n\nRepresents a natural transformation between functors.\n\nFields\n\nsource::Functor: Source functor\ntarget::Functor: Target functor\ncomponents::Dict{<:Object,<:Morphism}: Component morphisms\nid::Symbol: Unique identifier for the natural transformation\n\n\n\n\n\n","category":"type"},{"location":"api.html#Moma.Categories.Pattern","page":"API","title":"Moma.Categories.Pattern","text":"Pattern\n\nRepresents a pattern (diagram) in a category.\n\nFields\n\ncategory::Category: The category containing the pattern\nobjects::Vector{<:Object}: Objects in the pattern\nmorphisms::Vector{<:Morphism}: Morphisms in the pattern\nid::Symbol: Unique identifier for the pattern\n\n\n\n\n\n","category":"type"},{"location":"api.html#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"api.html#Basic-Operations","page":"API","title":"Basic Operations","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Moma.Categories.identity\nMoma.Categories.compose\nMoma.Categories.is_morphism_in_category","category":"page"},{"location":"api.html#Moma.Categories.identity","page":"API","title":"Moma.Categories.identity","text":"identity(obj::Object)\n\nCreate an identity morphism for an object.\n\nArguments\n\nobj::Object: The object to create an identity morphism for\n\nReturns\n\nMorphism: A morphism from the object to itself with the identity function\n\nExamples\n\nA = Object(:A, \"data\")\nid_A = identity(A)\n@assert id_A.map(A.data) == A.data\n\n\n\n\n\n","category":"function"},{"location":"api.html#Moma.Categories.compose","page":"API","title":"Moma.Categories.compose","text":"compose(f::Morphism, g::Morphism)\n\nCompose two morphisms if they are composable (target of f equals source of g).\n\nArguments\n\nf::Morphism{S,T}: First morphism\ng::Morphism{T,U}: Second morphism\n\nReturns\n\nMorphism{S,U}: The composition g ∘ f\n\nThrows\n\nErrorException: If the morphisms are not composable (f.target ≠ g.source)\n\nExamples\n\n# Create objects and morphisms\nA = Object(:A, \"hello\")\nB = Object(:B, \"HELLO\")\nC = Object(:C, \"HELLO!\")\nf = Morphism(A, B, uppercase, :f)\ng = Morphism(B, C, s -> s * \"!\", :g)\n\n# Compose morphisms\nh = compose(f, g)\n@assert h.map(\"hello\") == \"HELLO!\"\n\n# This will throw an error\nk = Morphism(C, A, lowercase, :k)\ncompose(f, k)  # Error: Morphisms are not composable\n\n\n\n\n\n","category":"function"},{"location":"api.html#Moma.Categories.is_morphism_in_category","page":"API","title":"Moma.Categories.is_morphism_in_category","text":"is_morphism_in_category(morphism::Morphism, category::Category)\n\nCheck if a morphism belongs to a category.\n\nArguments\n\nmorphism::Morphism: The morphism to check\ncategory::Category: The category to check against\n\nReturns\n\nBool: true if the morphism belongs to the category, false otherwise\n\nExamples\n\n# Create objects and a morphism\nA = Object(:A, 1)\nB = Object(:B, 2)\nf = Morphism(A, B, x -> x + 1, :f)\n\n# Create a category and check membership\nC = Category([A, B], [f], :C)\n@assert is_morphism_in_category(f, C)\n\n# Check a morphism not in the category\ng = Morphism(B, A, x -> x - 1, :g)\n@assert !is_morphism_in_category(g, C)\n\n\n\n\n\n","category":"function"},{"location":"api.html#Pattern-and-Colimit-Operations","page":"API","title":"Pattern and Colimit Operations","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Moma.Categories.create_pattern\nMoma.Categories.check_binding\nMoma.Categories.find_colimit","category":"page"},{"location":"api.html#Moma.Categories.create_pattern","page":"API","title":"Moma.Categories.create_pattern","text":"create_pattern(category::Category, objects::Vector{<:Object}, morphisms::Vector{<:Morphism})\n\nCreate a pattern (diagram) from a subset of objects and morphisms in a category.\n\nArguments\n\ncategory::Category: The category containing the objects and morphisms\nobjects::Vector{<:Object}: Objects to include in the pattern\nmorphisms::Vector{<:Morphism}: Morphisms to include in the pattern\n\nReturns\n\nPattern: A new pattern containing the specified objects and morphisms\n\nThrows\n\nErrorException: If any object or morphism does not belong to the category\n\nExamples\n\n# Create objects and morphisms\nA = Object(:A, 1)\nB = Object(:B, 2)\nf = Morphism(A, B, x -> x + 1, :f)\n\n# Create category and pattern\nC = Category([A, B], [f], :C)\nP = create_pattern(C, [A, B], [f])\n\n# This will throw an error\nX = Object(:X, 0)\ncreate_pattern(C, [A, X], [f])  # Error: Objects must belong to the category\n\n\n\n\n\n","category":"function"},{"location":"api.html#Moma.Categories.check_binding","page":"API","title":"Moma.Categories.check_binding","text":"check_binding(object::Object, bindings::Dict{<:Object,<:Morphism}, pattern::Pattern)\n\nCheck if an object with specified bindings forms a colimit for a pattern.\n\nArguments\n\nobject::Object: The candidate colimit object\nbindings::Dict{<:Object,<:Morphism}: Morphisms from pattern objects to the candidate\npattern::Pattern: The pattern to check\n\nReturns\n\nBool: true if the object with bindings forms a colimit, false otherwise\n\nMathematical Description\n\nFor a pattern P and an object C with bindings b, this checks if C is a colimit by verifying:\n\nEvery object in P has a binding morphism to C\nAll diagrams commute: For any morphism f: X → Y in P, bY ∘ f = bX\n\nwhere bX and bY are the binding morphisms for X and Y respectively.\n\nExamples\n\n# Create a simple pattern\nA = Object(:A, 1)\nB = Object(:B, 2)\nf = Morphism(A, B, x -> x + 1, :f)\nC = Category([A, B], [f], :C)\nP = create_pattern(C, [A, B], [f])\n\n# Create bindings to a candidate colimit\ncolimit = Object(:Col, [1, 2])\nbindings = Dict(\n    A => Morphism(A, colimit, x -> [x, x+1], :bA),\n    B => Morphism(B, colimit, x -> [x-1, x], :bB)\n)\n\n# Check if it forms a colimit\nis_colimit = check_binding(colimit, bindings, P)\n\n\n\n\n\n","category":"function"},{"location":"api.html#Moma.Categories.find_colimit","page":"API","title":"Moma.Categories.find_colimit","text":"find_colimit(pattern::Pattern)\n\nFind or construct a colimit for a pattern.\n\nArguments\n\npattern::Pattern: The pattern to find a colimit for\n\nReturns\n\nTuple{Object,Dict{<:Object,<:Morphism}}: A tuple containing:\nThe colimit object\nA dictionary mapping pattern objects to their binding morphisms\n\nDescription\n\nThis function constructs a colimit by:\n\nCreating a candidate object that combines data from all pattern objects\nConstructing appropriate morphisms from pattern objects to the candidate\nVerifying the colimit properties\n\nMathematical Background\n\nA colimit is a universal cocone over a diagram. For a pattern P, it consists of:\n\nAn object C (the colimit object)\nA family of morphisms bi: Pi → C (the binding morphisms)\n\nsuch that:\n\nAll diagrams commute\nFor any other cocone (D, h_i), there exists a unique morphism u: C → D making all triangles commute\n\nExamples\n\n# Create a simple pattern\nA = Object(:A, 1)\nB = Object(:B, 2)\nf = Morphism(A, B, x -> x + 1, :f)\nC = Category([A, B], [f], :C)\nP = create_pattern(C, [A, B], [f])\n\n# Find its colimit\ncolimit_obj, bindings = find_colimit(P)\n@assert colimit_obj.data == [1, 2]  # Combined data\n@assert check_binding(colimit_obj, bindings, P)  # Verify it's a colimit\n\nThrows\n\nErrorException: If a valid colimit cannot be constructed\n\n\n\n\n\n","category":"function"},{"location":"api.html#Type-Parameters","page":"API","title":"Type Parameters","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Many types in the module are parameterized to allow for flexible data types:","category":"page"},{"location":"api.html","page":"API","title":"API","text":"Object{T}: T can be any type\nMorphism{S,T}: S is the source object's data type, T is the target object's data type","category":"page"},{"location":"api.html","page":"API","title":"API","text":"This allows for creating categories with heterogeneous data types while maintaining type safety.","category":"page"},{"location":"api.html#Error-Handling","page":"API","title":"Error Handling","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Functions in the module may throw the following errors:","category":"page"},{"location":"api.html","page":"API","title":"API","text":"ErrorException: When morphisms are not composable\nErrorException: When objects or morphisms don't belong to a category\nErrorException: When colimit construction fails\nErrorException: When pattern creation fails due to invalid inputs","category":"page"},{"location":"api.html#Mathematical-Background","page":"API","title":"Mathematical Background","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"The implementation follows standard category theory definitions:","category":"page"},{"location":"api.html","page":"API","title":"API","text":"A category consists of objects and morphisms satisfying identity and composition laws\nFunctors preserve categorical structure between categories\nNatural transformations provide mappings between functors\nColimits represent universal constructions for patterns","category":"page"},{"location":"api.html","page":"API","title":"API","text":"For more detailed mathematical background, see the Papers section. ","category":"page"},{"location":"mes07.html#MES07:-Memory-Evolutive-Systems","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"","category":"section"},{"location":"mes07.html#Overview","page":"MES07: Memory Evolutive Systems","title":"Overview","text":"","category":"section"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"This foundational paper introduces Memory Evolutive Systems (MES) as mathematical models for autonomous evolutionary systems, particularly focusing on biological and social systems, including nervous systems of higher animals. The work is rooted in category theory and represents two decades of research development.","category":"page"},{"location":"mes07.html#Key-Concepts","page":"MES07: Memory Evolutive Systems","title":"Key Concepts","text":"","category":"section"},{"location":"mes07.html#Complexity-Characterization","page":"MES07: Memory Evolutive Systems","title":"Complexity Characterization","text":"","category":"section"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"The paper addresses three fundamental problems:","category":"page"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"The Binding Problem: How simple objects combine to form a \"whole greater than the sum of its parts\"\nThe Emergence Problem: How properties of complex objects relate to their elementary components\nThe Hierarchy Problem: Explaining the formation of increasingly complex objects, from elementary particles to societies","category":"page"},{"location":"mes07.html#Self-Regulation","page":"MES07: Memory Evolutive Systems","title":"Self-Regulation","text":"","category":"section"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"The paper introduces key characteristics that allow for autonomy through self-regulation:","category":"page"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"Internal regulation systems\nCapacity to recognize environmental characteristics\nDevelopment of appropriate responses\nIntroduction of co-regulators (CR) for different hierarchy levels\nFlexible memory systems for adaptation","category":"page"},{"location":"mes07.html#Cognitive-Systems","page":"MES07: Memory Evolutive Systems","title":"Cognitive Systems","text":"","category":"section"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"The paper explores applications to:","category":"page"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"Nervous system modeling\nCognition processes\nConsciousness modeling\nDevelopment of personal memory (archetypal core)","category":"page"},{"location":"mes07.html#Mathematical-Framework","page":"MES07: Memory Evolutive Systems","title":"Mathematical Framework","text":"","category":"section"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"The model uses:","category":"page"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"Category theory as the foundational mathematical structure\nComplex systems theory\nHierarchical evolutive systems based on colimit concepts\nNetwork theory for co-regulator interactions","category":"page"},{"location":"mes07.html#Applications","page":"MES07: Memory Evolutive Systems","title":"Applications","text":"","category":"section"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"The framework has applications in:","category":"page"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"Biology\nMedicine\nSociology\nEcology\nEconomics\nComplex systems analysis","category":"page"},{"location":"mes07.html#Historical-Context","page":"MES07: Memory Evolutive Systems","title":"Historical Context","text":"","category":"section"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"The work emerged from a collaboration between:","category":"page"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"Jean-Paul Vanbremeersch (physician specializing in gerontology)\nAndrée C. Ehresmann (mathematician)","category":"page"},{"location":"mes07.html","page":"MES07: Memory Evolutive Systems","title":"MES07: Memory Evolutive Systems","text":"Their collaboration began in 1980, leading to the development of MES theory. ","category":"page"},{"location":"examples.html#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"This section provides examples of using the basic categorical constructions implemented in the Categories module.","category":"page"},{"location":"examples.html#Basic-Categorical-Constructions","page":"Examples","title":"Basic Categorical Constructions","text":"","category":"section"},{"location":"examples.html#Creating-Objects-and-Morphisms","page":"Examples","title":"Creating Objects and Morphisms","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"using Moma.Categories\n\n# Create objects with different types of data\nA = Object(:A, \"object A\")  # String data\nB = Object(:B, 42)         # Integer data\nC = Object(:C, 3.14)      # Float data\n\n# Create morphisms with explicit functions\nf_str = Morphism(A, Object(:B, \"OBJECT A\"), uppercase, :f_str)\ng_float = Morphism(B, C, x -> float(x), :g_float)\n\n# Compose morphisms when they are compatible\nh = compose(Morphism(A, B, x -> length(x), :h),\n           Morphism(B, C, x -> float(x), :i))\n\n# this results in 11\nh.map(\"testa10,m12\")","category":"page"},{"location":"examples.html#Working-with-Categories","page":"Examples","title":"Working with Categories","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"# Create a category with objects and morphisms\nobjects = [A, B, C]\nmorphisms = [f_str, g_float, h]\ncat = Category(objects, morphisms, :ExampleCategory)\n\n# Check if morphisms belong to the category\n@assert is_morphism_in_category(f_str, cat)\n@assert !is_morphism_in_category(Morphism(A, C, x -> 0, :k), cat)\n\n# Identity morphisms are always valid\nid_A = Moma.Categories.identity(A)\n@assert id_A.source == A\n@assert id_A.target == A\n@assert id_A.map(\"test\") == \"test\"","category":"page"},{"location":"examples.html#Patterns-and-Colimits","page":"Examples","title":"Patterns and Colimits","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"# Create a simple pattern (diagram)\npattern_objects = [A, B]\npattern_morphisms = [f_str]\npattern = create_pattern(cat, pattern_objects, pattern_morphisms)\n\n# Create a candidate colimit object\ncolimit = Object(:colimit, [\"object A\", 42])  # Combines data from A and B\n\n# Create binding morphisms\nbindings = Dict(\n    A => Morphism(A, colimit, x -> [x, 42], :bind_A),\n    B => Morphism(B, colimit, x -> [\"object A\", x], :bind_B)\n)\n\n# Check if it forms a colimit\nis_colimit = check_binding(colimit, bindings, pattern)\n\n# Alternatively, find a colimit automatically\ncolimit_obj, auto_bindings = find_colimit(pattern)\n@assert check_binding(colimit_obj, auto_bindings, pattern)","category":"page"},{"location":"examples.html#Advanced-Usage","page":"Examples","title":"Advanced Usage","text":"","category":"section"},{"location":"examples.html#Creating-Custom-Categories","page":"Examples","title":"Creating Custom Categories","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"# Define custom data types\nstruct Point\n    x::Float64\n    y::Float64\nend\n\nstruct Line\n    start::Point\n    ends::Point\nend\n\n# Create objects with custom data\np1 = Object(:P1, Point(0.0, 0.0))\np2 = Object(:P2, Point(1.0, 1.0))\nl1 = Object(:L1, Line(Point(0.0, 0.0), Point(1.0, 1.0)))\n\n# Create morphisms between custom objects\nf = Morphism(p1, l1, p -> Line(p, Point(p.x + 1.0, p.y + 1.0)), :f)\n\n# Create a category of geometric objects\ngeom_cat = Category([p1, p2, l1], [f], :Geometry)\n\n# Create and verify patterns\ngeom_pattern = create_pattern(geom_cat, [p1, l1], [f])","category":"page"},{"location":"examples.html#Working-with-Multiple-Categories","page":"Examples","title":"Working with Multiple Categories","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"# Create two categories\ncat1 = Category([A, B], [f], :Cat1)\ncat2 = Category([C], [], :Cat2)\n\n# Create mappings for a functor\nobj_map = Dict(A => C, B => C)\nmorph_map = Dict(f => identity(C))\n\n# Create a functor between categories\nF = Functor(cat1, cat2, obj_map, morph_map, :F)\n\n# Create a natural transformation\ncomponents = Dict(\n    A => Morphism(obj_map[A], obj_map[A], identity, :eta_A),\n    B => Morphism(obj_map[B], obj_map[B], identity, :eta_B)\n)\neta = NaturalTransformation(F, F, components, :eta)","category":"page"},{"location":"examples.html#Error-Handling-Examples","page":"Examples","title":"Error Handling Examples","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"# Attempting to compose incompatible morphisms\nf = Morphism(A, B, x -> x, :f)\ng = Morphism(C, A, x -> x, :g)\ntry\n    compose(f, g)  # This will throw an error\ncatch e\n    println(\"Error: \", e)  # \"Morphisms are not composable\"\nend\n\n# Attempting to create invalid patterns\ntry\n    create_pattern(cat, [Object(:X, 0)], [])  # Object not in category\ncatch e\n    println(\"Error: \", e)  # \"Objects must belong to the category\"\nend\n\n# Attempting to find invalid colimits\ninvalid_pattern = create_pattern(cat, [A, B], [])\ncolimit_obj, bindings = find_colimit(invalid_pattern)\ntry\n    check_binding(Object(:bad, 0), Dict(), invalid_pattern)\ncatch e\n    println(\"Error: \", e)  # Missing bindings\nend","category":"page"},{"location":"mes23.html#MES25:-A-Mathematical-Framework-for-Enriching-Human-Machine-Interactions","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"","category":"section"},{"location":"mes23.html#Overview","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Overview","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"This paper presents a conceptual mathematical framework for developing rich human-machine interactions to improve decision-making in social organizations. It introduces the concept of a \"multi-level artificial cognitive system\" called a data analyser (DA) that collaborates with humans in data analysis and decision-making processes.","category":"page"},{"location":"mes23.html#Key-Concepts","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Key Concepts","text":"","category":"section"},{"location":"mes23.html#Data-Analyser-(DA)","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Data Analyser (DA)","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"The DA is designed to:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Collect and analyze data\nLearn and develop autonomous procedures\nAnticipate situations\nDevelop new responses\nImprove decision-making processes","category":"page"},{"location":"mes23.html#Human-Machine-Partnership","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Human-Machine Partnership","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"The framework focuses on:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Collaborative data analysis\nKnowledge extension\nAutonomous learning\nCreation of new procedures\nDeep anticipation capabilities","category":"page"},{"location":"mes23.html#Memory-Evolutive-Systems-Integration","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Memory Evolutive Systems Integration","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"The paper uses MES to describe:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Social organization operations\nDA construction and evolution\nMulti-scale system interactions\nMulti-agent coordination\nMulti-temporality handling","category":"page"},{"location":"mes23.html#Technical-Framework","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Technical Framework","text":"","category":"section"},{"location":"mes23.html#AI-Integration","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"AI Integration","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"The paper discusses:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Historical AI development\nSymbolic AI approaches\nConnectionist paradigms\nIntegration of multiple AI paradigms\nCategory theory applications","category":"page"},{"location":"mes23.html#Implementation-Aspects","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Implementation Aspects","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Key implementation features:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Multi-level cognitive systems\nRich human-machine interactions\nAnticipatory capabilities\nRisk prevention strategies\nOpportunity identification","category":"page"},{"location":"mes23.html#Applications","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Applications","text":"","category":"section"},{"location":"mes23.html#Healthcare-Example","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Healthcare Example","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Demonstrates DA implementation in:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Symptom detection\nAutonomous response selection\nDecision-making participation\nCommunication improvement\nMisunderstanding detection","category":"page"},{"location":"mes23.html#General-Applications","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"General Applications","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"The framework can be applied to:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Social organizations\nHealthcare institutions\nEducational systems\nBusiness environments\nComplex decision-making scenarios","category":"page"},{"location":"mes23.html#Future-Directions","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"Future Directions","text":"","category":"section"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"The paper suggests development paths for:","category":"page"},{"location":"mes23.html","page":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","title":"MES25: A Mathematical Framework for Enriching Human-Machine Interactions","text":"Third-generation AI systems\nEnhanced human-machine collaboration\nImproved anticipatory capabilities\nRisk prevention mechanisms\nDecision-making optimization ","category":"page"},{"location":"index.html#MoMa","page":"Home","title":"MoMa","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"A Julia package implementing a Monetary Macro Accounting (MoMa). To be extended with categorical tools of Memory Evolutive Systems (MES).","category":"page"},{"location":"index.html#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"MoMa provides this documentation and implementations of","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"basic category theoretical constructions\nbasic simulation of a MoMa national accounting\npdfs and summaries of MES and MoMa","category":"page"},{"location":"index.html#Current-work","page":"Home","title":"Current work","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"categorify MoMa national accounting simulation","category":"page"},{"location":"index.html#Documentation-Sections","page":"Home","title":"Documentation Sections","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Examples - Basic categorical constructions and usage examples\nPapers - Mathematical foundations and theoretical background\nAPI Reference - Documentation of all functions and types ","category":"page"},{"location":"moma25.html#MOMA25:-Monetary-Macro-Accounting-Theory","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"","category":"section"},{"location":"moma25.html#Overview","page":"MOMA25: Monetary Macro Accounting Theory","title":"Overview","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"This paper develops a specification for software for macro accounting (MoMa) and a monetary macro accounting theory (MoMaT). It presents a novel approach where money functions as a medium of payment for obligations and debts, rather than just a medium of exchange.","category":"page"},{"location":"moma25.html#Key-Concepts","page":"MOMA25: Monetary Macro Accounting Theory","title":"Key Concepts","text":"","category":"section"},{"location":"moma25.html#Theoretical-Framework","page":"MOMA25: Monetary Macro Accounting Theory","title":"Theoretical Framework","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"The paper addresses:","category":"page"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Temporal misalignment in production\nLegal principles of Separation and Abstraction\nDebt, contracts, and property rights\nMulti-level monetary systems analysis","category":"page"},{"location":"moma25.html#System-Levels","page":"MOMA25: Monetary Macro Accounting Theory","title":"System Levels","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"The monetary system operates at three interconnected levels:","category":"page"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Micro Level: Division of labor facilitation\nMeso Level: Risk sharing in banking\nMacro Level: GDP distribution through issued money","category":"page"},{"location":"moma25.html#Core-Components","page":"MOMA25: Monetary Macro Accounting Theory","title":"Core Components","text":"","category":"section"},{"location":"moma25.html#Bill-of-Exchange-(BoE)","page":"MOMA25: Monetary Macro Accounting Theory","title":"Bill of Exchange (BoE)","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Serves as:","category":"page"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Unifying instrument\nBridge between debt processes\nMoney issuing mechanism\nConnection between fiat and gold-based systems","category":"page"},{"location":"moma25.html#Mathematical-Foundations","page":"MOMA25: Monetary Macro Accounting Theory","title":"Mathematical Foundations","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Utilizes:","category":"page"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Sheaf theory for accounting invariances\nHomology theory for monetary policy\nOpen Games for computation\nMulti-agent model analysis","category":"page"},{"location":"moma25.html#Applications","page":"MOMA25: Monetary Macro Accounting Theory","title":"Applications","text":"","category":"section"},{"location":"moma25.html#Supply-Chain-Finance","page":"MOMA25: Monetary Macro Accounting Theory","title":"Supply Chain Finance","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Debt networks analysis\nPayment systems integration\nRisk distribution mechanisms\nFinancial obligation tracking","category":"page"},{"location":"moma25.html#Monetary-Policy","page":"MOMA25: Monetary Macro Accounting Theory","title":"Monetary Policy","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Central banking operations\nMoney circulation analysis\nDebt vortices study\nFinancial obligation resolution","category":"page"},{"location":"moma25.html#Technical-Implementation","page":"MOMA25: Monetary Macro Accounting Theory","title":"Technical Implementation","text":"","category":"section"},{"location":"moma25.html#Software-Components","page":"MOMA25: Monetary Macro Accounting Theory","title":"Software Components","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"MoMa implementation includes:","category":"page"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Macro accounting systems\nSmart contracts\nStructural econometric models\nData analysis tools","category":"page"},{"location":"moma25.html#Mathematical-Tools","page":"MOMA25: Monetary Macro Accounting Theory","title":"Mathematical Tools","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Employs:","category":"page"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Category theory\nSheaf theory\nHomology theory\nGame theory","category":"page"},{"location":"moma25.html#Future-Implications","page":"MOMA25: Monetary Macro Accounting Theory","title":"Future Implications","text":"","category":"section"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"The framework provides foundations for:","category":"page"},{"location":"moma25.html","page":"MOMA25: Monetary Macro Accounting Theory","title":"MOMA25: Monetary Macro Accounting Theory","text":"Modern monetary systems\nDigital currency development\nFinancial system evolution\nEconomic policy making ","category":"page"},{"location":"papers.html#Papers","page":"Papers","title":"Papers","text":"","category":"section"},{"location":"papers.html","page":"Papers","title":"Papers","text":"This section provides an overview of the papers that form the theoretical foundation of the MoMa package.","category":"page"},{"location":"papers.html#Memory-Evolutive-Systems-(MES)","page":"Papers","title":"Memory Evolutive Systems (MES)","text":"","category":"section"},{"location":"papers.html","page":"Papers","title":"Papers","text":"Summary, pdf","category":"page"},{"location":"papers.html","page":"Papers","title":"Papers","text":"A comprehensive synthesis of two decades of research on memory evolutive systems, presenting mathematical models for autonomous evolutionary systems such as biological, social, and nervous systems.","category":"page"},{"location":"papers.html#MES-for-Human–Machine-Interactions","page":"Papers","title":"MES for Human–Machine Interactions","text":"","category":"section"},{"location":"papers.html","page":"Papers","title":"Papers","text":"Summary, pdf","category":"page"},{"location":"papers.html","page":"Papers","title":"Papers","text":"Analysis of human-machine interactions using MES framework.","category":"page"},{"location":"papers.html#Monetary-Macro-Accounting-(MoMa)","page":"Papers","title":"Monetary Macro Accounting (MoMa)","text":"","category":"section"},{"location":"papers.html","page":"Papers","title":"Papers","text":"Summary, pdf","category":"page"},{"location":"papers.html","page":"Papers","title":"Papers","text":"A monetary macro accounting theory.","category":"page"},{"location":"papers.html#A-MoMa-Simulation-of-National-Accounting","page":"Papers","title":"A MoMa Simulation of National Accounting","text":"","category":"section"},{"location":"papers.html","page":"Papers","title":"Papers","text":"The src/original_moma directory contains several files used for generating and checking simulation data underlying the MoMa paper. momascf_v02_en.jl is a simulation of the following basic national accounting structure.","category":"page"},{"location":"papers.html","page":"Papers","title":"Papers","text":"(Image: Basic National Accounting Structure) ","category":"page"}]
}
